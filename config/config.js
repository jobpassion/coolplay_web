// Generated by CoffeeScript 1.8.0
(function() {
  var config, log4js;

  config = {
    impl: 'AVOS',
    dbHost: "mysql.cfp3qdjt6nej.ap-northeast-1.rds.amazonaws.com",
    dbUser: "awsuser",
    dbPassword: "261103692",
    dbDatabase: "webapp",
    redisHost: "awsc.droyyu.0001.apne1.cache.amazonaws.com",
    redisPort: "6379",
    solr: {
      host: 'solr-fanhua.rhcloud.com',
      port: '',
      core: 'coolweb_collection',
      path: '/'
    }
  };

  log4js = require("log4js");

  log4js.configure({
    appenders: [
      {
        type: "logLevelFilter",
        level: "INFO",
        appender: {
          type: "console",
          level: "error"
        }
      }, {
        type: "logLevelFilter",
        level: "INFO",
        appender: {
          type: "dateFile",
          filename: "logs/logs.log",
          pattern: "-yyyy-MM-dd",
          maxLogSize: 1024,
          alwaysIncludePattern: true,
          backups: 5
        }
      }
    ]
  });

  GLOBAL.ROOT = __dirname + "/../";

  module.exports = config;

  config.setAV = function(_AV) {
    return GLOBAL.AV = _AV;
  };

  Object.defineProperty(global, "__stack", {
    get: function() {
      var err, orig, stack;
      orig = Error.prepareStackTrace;
      Error.prepareStackTrace = function(_, stack) {
        return stack;
      };
      err = new Error;
      Error.captureStackTrace(err, arguments_.callee);
      stack = err.stack;
      Error.prepareStackTrace = orig;
      return stack;
    }
  });

  Object.defineProperty(global, "__line", {
    get: function() {
      return 0;
      return __stack[1].getLineNumber();
    }
  });

  Object.defineProperty(global, "__function", {
    get: function() {
      return 'none';
      return __stack[1].getFunctionName();
    }
  });

}).call(this);
