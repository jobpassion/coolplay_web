// Generated by CoffeeScript 1.8.0
(function() {
  var async, classMap, config, randomToken, userDao;

  config = require("cloud/config/config");

  randomToken = function() {
    return crypto.randomBytes(20).toString("hex");
  };

  userDao = require(config.ROOT + "dao/userDao");

  async = require("async");

  classMap = {};

  exports.addToLike = function(user, post, callback) {
    var publish;
    publish = AV.Object["new"]('Comment');
    publish.set('objectId', post);
    return userDao.queryByParam('Like', {
      author: user,
      post: publish
    }, function(error, results) {
      if (error) {
        return callback(error, null);
      } else {
        if (results.length > 0) {
          return callback(null, 0);
        } else {
          return userDao.insert('Like', {
            author: user,
            post: publish
          }, function(error, result) {
            if (!error) {
              return callback(null, 1);
            }
          });
        }
      }
    });
  };

  exports.addToFavorite = function(user, post, callback) {
    var publish;
    publish = AV.Object["new"]('Publish');
    publish.set('objectId', post);
    return userDao.queryByParam('Favorite', {
      author: user,
      post: publish
    }, function(error, results) {
      if (error) {
        return callback(error, null);
      } else {
        if (results.length > 0) {
          return callback(null, 0);
        } else {
          return userDao.insert('Favorite', {
            author: user,
            post: publish
          }, function(error, result) {
            if (!error) {
              return userDao.get('Publish', post, function(error, publish) {
                publish.add('favorites', result);
                return userDao.save(publish, function(error, result) {
                  return callback(null, 1);
                });
              });
            }
          });
        }
      }
    });
  };

  exports.queryLatestPublish = function(param, callback) {
    return userDao.queryLatestPublish(param, function(error, results1) {
      if (param.user) {
        return userDao.queryFavorites(param, function(error, results) {
          var favorite, favoriteMap, post, _i, _j, _len, _len1;
          favoriteMap = {};
          for (_i = 0, _len = results.length; _i < _len; _i++) {
            favorite = results[_i];
            favoriteMap[(favorite.get('post')).id] = 1;
          }
          for (_j = 0, _len1 = results1.length; _j < _len1; _j++) {
            post = results1[_j];
            if (favoriteMap[post.id]) {
              post.set('favorite', true);
            }
          }
          return callback(error, results1);
        });
      } else {
        return callback(error, results1);
      }
    });
  };

}).call(this);
