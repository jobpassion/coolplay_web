// Generated by CoffeeScript 1.8.0
(function() {
  var daoHelper;

  daoHelper = require("./daoHelper");

  exports.insert = function(user, callback) {
    daoHelper.sql("INSERT INTO user SET ?", user, callback);
  };

  exports.queryByName = function(name, callback) {
    daoHelper.sql("select * from user where loginName = ?", [name], callback);
  };

  exports.queryByname = function(name, callback) {
    daoHelper.sql("select * from user where name=?", name, callback);
  };

  exports.queryByParams = function(params, callback) {
    var i, whereCause;
    whereCause = "";
    for (i in params) {
      whereCause += " and " + i + "='" + params[i] + "'";
    }
    daoHelper.sql("select * from user where 1=1" + whereCause, null, callback);
  };

  exports.insertUserAction = function(userAction, callback) {
    daoHelper.sql("insert into userAction set ?", userAction, callback);
    return;
    return daoHelper.sql("select t1.*, count(t2.id) reviewCount from business t1 left  join businessReview t2 on t1.id = t2.businessId where " + likeStr + " group by t1.id ", null, callback);
  };

  exports.queryUserAction = function(params, callback) {
    daoHelper.sql("select a.user, b.* , count(t2.id) reviewCount  from userAction a left join business b on a.target = b.id left join businessReview t2 on b.id = t2.businessId where a.user=? and a.type=? group by b.id", [params.user, params.type], callback);
  };

  exports.registXMPP = function(user, callback) {
    daoHelper.sql("insert into ejabberd.users set ?", {
      username: user.id,
      password: user.password,
      created_at: new Date()
    }, callback);
  };

}).call(this);
