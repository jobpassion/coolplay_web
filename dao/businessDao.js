// Generated by CoffeeScript 1.8.0
(function() {
  var daoHelper;

  daoHelper = require("./daoHelper");

  exports.insert = function(business, callback) {
    daoHelper.sql("insert into business set ?", business, callback);
  };

  exports.queryBySourceId = function(sourceId, callback) {
    daoHelper.sql("select * from business where sourceId = ?", [sourceId], callback);
  };

  exports.queryUrls = function(callback) {
    daoHelper.sql("select * from tmpUrls where complete is null and count < 750 and count >0 limit 0, 50", null, callback);
  };

  exports.updateUrl = function(url, callback) {
    daoHelper.sql("update tmpUrls set complete = 1 where id = ?", [url.id], callback);
  };

  exports.queryGeoLike = function(geoHash, callback) {
    var i, likeStr;
    likeStr = "";
    for (i in geoHash) {
      likeStr += " or t1.geohash like '" + geoHash[i] + "%'";
    }
    likeStr = likeStr.substr(4);
    daoHelper.sql("select t1.*, count(t2.id) reviewCount from business t1 left  join businessReview t2 on t1.id = t2.businessId where " + likeStr + " group by t1.id ", null, callback);
  };

  exports.queryPriceNull = function(callback) {
    daoHelper.sql("select * from business where price is null", null, callback);
  };

  exports.updateBusiness = function(business, callback) {
    daoHelper.sql("update business set img = ?,fix=? where id=?", [business.img, business.fix, business.id], callback);
  };

  exports.queryComments = function(obj, callback) {
    daoHelper.sql("select * from businessReview where businessId=?", [obj.businessId], callback);
  };

  exports.queryByIds = function(ids, callback) {
    var id, whereCause, _i, _len;
    if (ids.length === 0) {
      callback([], null);
      return;
    }
    whereCause = 't1.id in (0';
    for (_i = 0, _len = ids.length; _i < _len; _i++) {
      id = ids[_i];
      whereCause += ', ' + id.id.substr(9);
    }
    whereCause += ')';
    daoHelper.sql("select t1.*, count(t2.id) reviewCount from business t1 left  join businessReview t2 on t1.id = t2.businessId where " + whereCause + " group by t1.id ", null, callback);
  };

}).call(this);
